# serverless.yml

service:
  name: decision-maker

frameworkVersion: ">=1.0.0 <2.0.0"

plugins:
  - serverless-plugin-include-dependencies
  - serverless-plugin-warmup

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev # Set the default stage used. Default is dev
  region: ap-southeast-2 # Overwrite the default region used. Default is us-east-1
  memorySize: 128 # Overwrite the default memory size. Default is 1024
  timeout: 30 # The default is 6
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "ec2:CreateNetworkInterface"
        - "ec2:DescribeNetworkInterfaces"
        - "ec2:DeleteNetworkInterface"
      Resource:
        - '*'
    - Effect: 'Allow'
      Action:
        - 'lambda:InvokeFunction'
      Resource:
      - Fn::Join:
        - ':'
        - - arn:aws:lambda
          - Ref: AWS::Region
          - Ref: AWS::AccountId
          - function:${self:service}-${opt:stage, self:provider.stage}-*
  vpc:
    securityGroupIds:
      - sg-cc2f31a0
    subnetIds:
      - subnet-73c9531a
      - subnet-f066f094

functions:
  roll: # A Function
    warmup: true
    handler: src/roll.handler # The file and module for this specific function.
    description: Returns random results for a dice or a coin.
    events: # The Events that trigger this Function
      - http: # This creates an API Gateway HTTP endpoint which can be used to trigger this function.  Learn more in "events/apigateway"
          path: roll # Path for this endpoint
          method: post # HTTP method for this endpoint
          cors: true # Turn on CORS for this endpoint, but don't forget to return the right header in your response
          private: false # Requires clients to add API keys values in the `x-api-key` header of their request

custom:
  warmup:
    schedule: 'cron(0/10 21-23,0-8 ? * MON-FRI *)' # Run WarmUP every 10 minutes Mon-Fri between 8:00am and 5:55pm (UTC)
    timeout: 20
    prewarm: true # Run WarmUp immediately after a deployment
